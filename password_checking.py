# -*- coding: utf-8 -*-
"""password_checking.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dKeRTnhpNUMIIYiMMmp2CGo--aeM4SXI
"""

import pandas as pd
import numpy as np
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

data=pd.read_csv("passwords.csv",error_bad_lines=False)
data.head()

data['strength'].unique()

data.isnull().sum()

data[data['password'].isnull()]

data.dropna(inplace=True)
data.isnull().sum()

sns.countplot(data['strength'])

pass_tuple=np.array(data)
pass_tuple

x=[label[0] for label in pass_tuple]
y=[label[1] for label in pass_tuple]

def word_division(inputs):
  character=[]
  for i in inputs:
    character.append(i)
  return character

from sklearn.feature_extraction.text import TfidfVectorizer
vectorizer=TfidfVectorizer(tokenizer=word_division)

X=vectorizer.fit_transform(x)
X.shape

vectorizer.get_feature_names()

first_document_vector=X[0]
first_document_vector
first_document_vector.T.todense()

df=pd.DataFrame(first_document_vector.T.todense(),index=vectorizer.get_feature_names(),columns=['TF-IDF'])
df.sort_values(by=['TF-IDF'],ascending=False)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.3)

from sklearn.linear_model import LogisticRegression
clf=LogisticRegression(random_state=1,multi_class='multinomial')

clf.fit(x_train,y_train)

dt=np.array(['%@123abcd'])
pred=vectorizer.transform(dt)
clf.predict(pred)

y_pred=clf.predict(x_test)
y_pred

from sklearn.metrics import confusion_matrix,accuracy_score
cm=confusion_matrix(y_test,y_pred)
print(cm)
print(accuracy_score(y_test,y_pred))